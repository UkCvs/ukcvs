--- util-linux-2.12i/MCONFIG	2004-11-04 18:15:32.000000000 +0100
+++ util-linux-2.12i/MCONFIG	2004-11-18 21:44:37.000000000 +0100
@@ -35,7 +35,7 @@
 
 # If HAVE_PASSWD is set to "yes", then passwd will not be built or
 # installed from the login-utils subdirectory.
-HAVE_PASSWD=no
+HAVE_PASSWD=yes
 
 # If you use chfn and chsh from this package, REQUIRE_PASSWORD will require
 # non-root users to enter the account password before updating /etc/passwd.
@@ -64,12 +64,12 @@
 # If HAVE_WRITE is set to "yes", then write will not be built or
 # installed from the misc-utils subdirectory.
 # (There is a network aware write in netwrite from NetKit 0.16 or later.)
-HAVE_WRITE=no
+HAVE_WRITE=yes
 
 # If HAVE_GETTY is set to "yes", then agetty will not be built or
 # installed from the login-utils subdirectory.  Note that agetty can
 # co-exist with other gettys, so this option should never be used.
-HAVE_GETTY=no
+HAVE_GETTY=yes
 
 # If USE_TTY_GROUP is set to "yes", then wall and write will be installed
 # setgid to the "tty" group, and mesg will only set the group write bit.
@@ -82,7 +82,7 @@
 # If HAVE_KILL is set to "yes", then kill will not be built or
 # installed from the misc-utils subdirectory.
 # (There is also a kill in the procps package.)
-HAVE_KILL=no
+HAVE_KILL=yes
 
 # If ALLOW_VCS_USE is set to "yes", then login will chown /dev/vcsN
 # to the current user, allowing her to make a screendump and do other
@@ -97,19 +97,19 @@
 # If HAVE_SLN is set to "yes", then sln won't be installed
 # (but the man page sln.8 will be installed anyway).
 # sln also comes with libc and glibc.
-HAVE_SLN=no
+HAVE_SLN=yes
 
 # If HAVE_FDUTILS is set to "yes", then setfdprm won't be installed.
-HAVE_FDUTILS=no
+HAVE_FDUTILS=yes
 
 # If SILENT_PG is set to "yes", then pg will not ring the bell
 # when an invalid key is pressed
-SILENT_PG=no
+SILENT_PG=yes
 
 # If configure decides that Native Language Support (NLS) is available,
 # it sets MAY_ENABLE_NLS in defines.h. If you don't want NLS, set
 # DISABLE_NLS to "yes".
-DISABLE_NLS=no
+DISABLE_NLS=yes
 
 # Different optimizations for different cpus.
 # gcc 3.0 likes options -mcpu=i486 instead of -m486
--- util-linux-2.12i/Makefile	2003-01-27 14:26:41.000000000 +0100
+++ util-linux-2.12i/Makefile	2004-11-18 21:49:18.000000000 +0100
@@ -9,16 +9,7 @@
 include ./MCONFIG
 
 SUBDIRS=po \
-	lib \
-	getopt \
-	disk-utils \
-	login-utils \
-	misc-utils \
-	mount \
-	fdisk \
-	hwclock \
-	sys-utils \
-	text-utils
+	fdisk
 
 .PHONEY: all install clean now
 all:	defines.h
diff -uNr util-linux-2.12r.org/fdisk/fdiskbsdlabel.c util-linux-2.12r/fdisk/fdiskbsdlabel.c
--- util-linux-2.12r.org/fdisk/fdiskbsdlabel.c	2003-07-13 23:12:47.000000000 +0200
+++ util-linux-2.12r/fdisk/fdiskbsdlabel.c	2009-09-15 11:55:22.000000000 +0200
@@ -538,7 +538,7 @@
 
   /* We need a backup of the disklabel (xbsd_dlabel might have changed). */
   d = &disklabelbuffer[BSD_LABELSECTOR * SECTOR_SIZE];
-  bcopy (d, &dl, sizeof (struct xbsd_disklabel));
+  memmove (&dl, d, sizeof (struct xbsd_disklabel));
 
   /* The disklabel will be overwritten by 0's from bootxx anyway */
   bzero (d, sizeof (struct xbsd_disklabel));
@@ -555,7 +555,7 @@
       exit ( EXIT_FAILURE );
     }
 
-  bcopy (&dl, d, sizeof (struct xbsd_disklabel));
+  memmove (d, &dl, sizeof (struct xbsd_disklabel));
 
 #if defined (__powerpc__) || defined (__hppa__)
   sector = 0;
@@ -740,8 +740,9 @@
 	if (BSD_BBSIZE != read (fd, disklabelbuffer, BSD_BBSIZE))
 		fatal (unable_to_read);
 
-	bcopy (&disklabelbuffer[BSD_LABELSECTOR * SECTOR_SIZE + BSD_LABELOFFSET],
-	       d, sizeof (struct xbsd_disklabel));
+	memmove (d,
+	       &disklabelbuffer[BSD_LABELSECTOR * SECTOR_SIZE + BSD_LABELOFFSET],
+	       sizeof (struct xbsd_disklabel));
 
 	if (d -> d_magic != BSD_DISKMAGIC || d -> d_magic2 != BSD_DISKMAGIC)
 		return 0;
@@ -776,7 +777,7 @@
   /* This is necessary if we want to write the bootstrap later,
      otherwise we'd write the old disklabel with the bootstrap.
   */
-  bcopy (d, &disklabelbuffer[BSD_LABELSECTOR * SECTOR_SIZE + BSD_LABELOFFSET],
+  memmove (&disklabelbuffer[BSD_LABELSECTOR * SECTOR_SIZE + BSD_LABELOFFSET], d,
 	 sizeof (struct xbsd_disklabel));
 
 #if defined (__alpha__) && BSD_LABELSECTOR == 0
diff -uNr util-linux-2.12r.org/fdisk/sfdisk.c util-linux-2.12r/fdisk/sfdisk.c
--- util-linux-2.12r.org/fdisk/sfdisk.c	2005-01-04 23:31:57.000000000 +0100
+++ util-linux-2.12r/fdisk/sfdisk.c	2010-03-11 12:58:00.000000000 +0100
@@ -48,7 +48,11 @@
 #include <sys/ioctl.h>
 #include <sys/stat.h>
 #include <sys/utsname.h>
-#include <linux/unistd.h>	/* _syscall */
+
+//#ifdef HAVE_LLSEEK
+#include <syscall.h>
+//#endif	/* HAVE_LLSEEK */
+
 #include "nls.h"
 #include "common.h"
 
@@ -171,15 +175,17 @@
  *
  * Note: we use 512-byte sectors here, irrespective of the hardware ss.
  */
-#undef use_lseek
+
 #if defined (__alpha__) || defined (__ia64__) || defined (__x86_64__) || defined (__s390x__)
 #define use_lseek
+#else
+#undef use_lseek
 #endif
 
-#ifndef use_lseek
+#ifdef use_lseek
 static __attribute__used
-_syscall5(int,  _llseek,  unsigned int,  fd, ulong, hi, ulong, lo,
-       loff_t *, res, unsigned int, wh);
+_syscall5(int _llseek,  unsigned int fd, ulong hi, ulong lo,
+       loff_t * res, unsigned int wh);
 #endif
 
 static int
@@ -188,7 +194,7 @@
     in = ((loff_t) s << 9);
     out = 1;
 
-#ifndef use_lseek
+#ifdef use_lseek
     if (_llseek (fd, in>>32, in & 0xffffffff, &out, SEEK_SET) != 0) {
 #else
     if ((out = lseek(fd, in, SEEK_SET)) != in) {
@@ -1730,12 +1736,12 @@
 	eof = 1;
 	return RD_EOF;
     }
-    if (!(lp = index(lp, '\n')))
+    if (!(lp = strchr(lp, '\n')))
       fatal(_("long or incomplete input line - quitting\n"));
     *lp = 0;
 
     /* remove comments, if any */
-    if ((lp = index(line+2, '#')) != 0)
+    if ((lp = strchr(line+2, '#')) != 0)
       *lp = 0;
 
     /* recognize a few commands - to be expanded */
@@ -1745,7 +1751,7 @@
     }
 
     /* dump style? - then bad input is fatal */
-    if ((ip = index(line+2, ':')) != 0) {
+    if ((ip = strchr(line+2, ':')) != 0) {
 	struct dumpfld *d;
 
       nxtfld:
@@ -2514,7 +2520,7 @@
 
     if (argc < 1)
       fatal(_("no command?\n"));
-    if ((progn = rindex(argv[0], '/')) == NULL)
+    if ((progn = strrchr(argv[0], '/')) == NULL)
       progn = argv[0];
     else
       progn++;
diff -uNr util-linux-2.12r.org/fdisk/llseek.c util-linux-2.12r/fdisk/llseek.c
--- util-linux-2.12r.org/fdisk/llseek_original.c	2010-03-11 12:44:38.000000000 +0100
+++ util-linux-2.12r.org/fdisk/llseek.c	2010-03-11 12:44:44.000000000 +0100
@@ -24,16 +24,16 @@
 #define my_llseek lseek
 
 #else
-#include <linux/unistd.h>	/* for __NR__llseek */
+#include <unistd.h>	/* for __NR__llseek */
 
 static int _llseek (unsigned int, unsigned long,
 		   unsigned long, long long *, unsigned int);
 
 #ifdef __NR__llseek
 
-static _syscall5(int,_llseek,unsigned int,fd,unsigned long,offset_high,
-		 unsigned long, offset_low,long long *,result,
-		 unsigned int, origin)
+static _syscall5(int _llseek, unsigned int fd, unsigned long offset_high,
+		 unsigned long offset_low, long long * result,
+		 unsigned int origin)
 
 #else
 
